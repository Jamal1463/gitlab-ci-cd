workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


stages:
  - build
  - deploy_prod

docker_build_netlify:
  stage: .pre
  image: docker:28
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  services:
    - docker:28-dind #(dind = docker in docker deamon)
  script:
    - docker --version
    - docker version
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  #  - docker build -t netlify-img -f ci/Dockerfile .
    - docker build -t $CI_REGISTRY_IMAGE/netlify-img -f ci/Dockerfile .
    - docker tag $CI_REGISTRY_IMAGE/netlify-img $CI_REGISTRY_IMAGE/netlify:20.1.1
    - docker image ls 
    - docker push $CI_REGISTRY_IMAGE/netlify:20.1.1

build_website:
  image: node:22-alpine
  stage: build
  script:
    - node --version
    - npm --version
    - npm ci
    - npm run build
  artifacts:
    paths:
      - build/


netlify_deploy_prod:
  image: $CI_REGISTRY_IMAGE/netlify:20.1.1
  stage: deploy_prod
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  environment:
    name: production
    url: 'https://devops-gitlab.netlify.app/' 
#  before_script:
#    - npm install -g netlify-cli@20.1.1
#    - apk add curl
  script:
    - netlify --version
    - netlify status
    - echo "Deploying to site id $NETLIFY_SITE_ID"
    - echo "Deploying to site auth token $NETLIFY_AUTH_TOKEN"
    - netlify deploy --prod --dir build
    - curl $CI_ENVIRONMENT_URL | grep 'GitLab'